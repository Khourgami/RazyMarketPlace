@page "/invoices/{Id:guid}"
@using RazySoft.Market.Admin.Application.DTOs
@using RazySoft.Market.Admin.Web.Services.UiContracts
@inject IInvoiceUiService InvoiceUiService

<h2 class="mb-4">Invoice Details</h2>

@if (_isLoading)
{
    <LoadingSpinner />
}
else if (_errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        <strong>Error:</strong> @_errorMessage
    </div>
}
else if (_invoice != null)
{
    <!-- Invoice Header Card -->
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Invoice #@_invoice.Id.ToString().Substring(0, 8).ToUpper()</h5>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Party</dt>
                <dd class="col-sm-9">
                    <a href="/parties/@_invoice.PartyId" class="text-primary">@_invoice.PartyId</a>
                </dd>

                <dt class="col-sm-3">Invoice Date</dt>
                <dd class="col-sm-9">@(_invoice.Date?.ToString("g") ?? "N/A")</dd>

                <dt class="col-sm-3">Total Items</dt>
                <dd class="col-sm-9">@_invoice.TotalQuantity?.ToString("N2")</dd>

                <dt class="col-sm-3">System Created</dt>
                <dd class="col-sm-9">@_invoice.CreatedAt.ToString("g")</dd>
            </dl>
        </div>
    </div>

    <!-- Sale Items Section -->
    <h3 class="mt-5 mb-3">Invoice Line Items (@_invoice.Items.Count())</h3>

    @if (!_invoice.Items.Any())
    {
        <EmptyState EntityName="Sale Items" Message="This invoice contains no sale items." />
    }
    else
    {
        <!-- Sale Item Table (Customized layout since EntityTable might not be ideal for line items) -->
        <div class="table-responsive">
            <table class="table table-striped table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Product Name</th>
                        <th>Product ID</th>
                        <th class="text-end">Quantity</th>
                        <th>Unit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in _invoice.Items)
                    {
                        <tr>
                            <td><a href="/products/@item.ProductId" class="text-primary">@* @item.ProductName *@</a></td>
                            <td>@item.ProductId.ToString().Substring(0, 8).ToUpper()</td>
                            <td class="text-end">@item.Quantity.ToString("N2")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private InvoiceDto? _invoice;
    private bool _isLoading = true;
    private string? _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        var response = await InvoiceUiService.GetInvoiceByIdAsync(Id);

        if (response.IsSuccess && response.Data != null)
        {
            _invoice = response.Data;
        }
        else
        {
            _errorMessage = response.ErrorMessage;
        }

        _isLoading = false;
    }
}
